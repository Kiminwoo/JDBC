# JDBC
package JDBC_Example;

import java.sql.*; // 

public class StatInsert2 {

	public static void main(String[] args) 
	{
		String url = "jdbc:oracle:thin:@localhost:1521:orcl"; 
		//thin방식으로 아이피 : 포트번호 : DB타입
		String user ="scott";
		String pass = "tiger";
 		try {
		//1. 드라이버를 메모리 로딩
		Class.forName("oracle.jdbc.driver.OracleDriver"); 
		
		// String 값은 양쪽에서 받을 수 있으니까.
		//2. 연결객체 얻어오기
		
		Connection con 
			= DriverManager.getConnection(url, user, pass);
		System.out.println("연결성공");
		
		//3.sql 문장만들기
		String name = "Whoareyou";
		String job = "engeering";
 		/*String sql = "INSERT INTO info_tab " +"(name, id, tel, sex, age, home) "
 											 +"VALUES(?,?,?,?,?,?)";
 		
 		*/
		//String sql = "DELETE FROM info_tab  " + "WHERE name='김길자'";
 		String sql = "UPDATE EMP SET ENAME='"+name+"' , JOB='"+job+"' WHERE EMPNO='7777'";			

 		/*
 		 	String sql = "UPDATE info_tab SET age = ? , home = ? WHERE name=?";
 		  
 		*/
 		
 		System.out.println(sql);
 		
 		//4.전송객체 가져오기 
 		PreparedStatement st = con.prepareStatement(sql);

 	//	st.setInt(1, age);
 	//	st.setString(2, id);
 	//	st.setString(3, tel);
 	//	st.setString(4, sex);
 	//	st.setString(2, home);
 	//	st.setString(3, name);
 			//	st.setInt(1, age);
 		//st.setString(2, home);
 		//st.setString(3, name);
 		
 		//5. 전송
 		st.executeUpdate();
 		
 		//6. 닫기
 		st.close();
 		con.close();
 		System.out.println("실행성공");
 		}
		catch(Exception ex) 
		{
			System.out.println("실패 : " + ex.getMessage());
			ex.printStackTrace();
		}
			
	}
}
